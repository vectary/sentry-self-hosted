user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;


events {
	worker_connections 1024;
}


http {
	default_type application/octet-stream;

	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
	'$status $body_bytes_sent "$http_referer" '
	'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	reset_timedout_connection on;

	keepalive_timeout 75s;

	gzip off;
	server_tokens off;

	server_names_hash_bucket_size 64;
	types_hash_max_size 2048;
	types_hash_bucket_size 64;
	client_max_body_size 100m;

	proxy_http_version 1.1;
	proxy_redirect off;
	proxy_buffering off;
	proxy_buffer_size          128k;
	proxy_buffers              4 256k;
	proxy_busy_buffers_size    256k;
	proxy_next_upstream error timeout invalid_header http_502 http_503 non_idempotent;
	proxy_next_upstream_tries 2;

	# Remove the Connection header if the client sends it,
	# it could be "close" to close a keepalive connection
	proxy_set_header Connection '';
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Request-Id $request_id;
	proxy_read_timeout 30s;
	proxy_send_timeout 5s;

	upstream relay {
		server relay:3000;
		keepalive 2;
	}

	upstream sentry {
		server web:9000;
		keepalive 2;
	}

	server {
		listen 80;
		server_name sentry.vectary.com;

		location /api/store/ {
			proxy_pass http://relay;
		}
		location ~ ^/api/[1-9]\d*/ {
			proxy_pass http://relay;
		}
		location / {
			proxy_pass http://sentry;
		}
		location /_static/ {
			proxy_pass http://sentry;
			proxy_hide_header Content-Disposition;
		}
	}
	server {
		listen 443 ssl;
		server_name sentry.vectary.com;
                ssl_certificate /etc/nginx/ssl/vectary.com/fullchain.pem;
                ssl_certificate_key /etc/nginx/ssl/vectary.com/privkey.pem;

		location /api/store/ {
			proxy_pass http://relay;
		}
		location ~ ^/api/[1-9]\d*/ {
			proxy_pass http://relay;
		}
		location / {
			proxy_pass http://sentry;
		}
		location /_static/ {
			proxy_pass http://sentry;
			proxy_hide_header Content-Disposition;
		}
	}
	server {
		listen 443 ssl;
		server_name cors.vectary.com;
                ssl_certificate /etc/nginx/ssl/vectary.com/fullchain.pem;
                ssl_certificate_key /etc/nginx/ssl/vectary.com/privkey.pem;

                location / {
                    proxy_http_version 1.1;
                    proxy_set_header Connection "Keep-Alive";
                    proxy_set_header Proxy-Connection "Keep-Alive";
                    proxy_pass http://172.17.0.1:8089;
                }
	}
	server {
		listen 443 ssl;
		server_name inbucket.vectary.com;
                ssl_certificate /etc/nginx/ssl/vectary.com/fullchain.pem;
                ssl_certificate_key /etc/nginx/ssl/vectary.com/privkey.pem;
                allow 3.122.22.69; #vectary vpn
                allow 212.89.250.27; #vectary office
                allow 95.102.220.153; #tomas.corej ip
                deny all;

                location / {
                  proxy_http_version 1.1;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto https;
                  proxy_set_header Host $http_host;
                  proxy_set_header Connection "Keep-Alive";
                  proxy_set_header Proxy-Connection "Keep-Alive";

                  proxy_pass http://172.17.0.1:19000;
                }

                location /api/v1/monitor/messages {
                  proxy_http_version 1.1;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto https;
                  proxy_set_header Host $http_host;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "Upgrade";

                  proxy_pass http://172.17.0.1:19000;

                }
	}
}
